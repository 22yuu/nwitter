{"version":3,"sources":["myBase.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","refreshUser","userObj","navigate","useNavigate","displayName","newDisplayName","setNewDisplayName","getMyNweets","q","query","collection","where","uid","orderBy","getDocs","forEach","doc","id","useEffect","updateProfile","signOut","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","NweetTextRef","NweetImgRef","ref","attachmentUrl","onDeleteClick","window","confirm","deleteDoc","deleteObject","toggleEditing","updateDoc","src","width","height","NweetFactory","nweet","setNweet","attachment","setAttachment","fileRef","uuidv4","uploadString","response","getDownloadURL","createdAt","Date","now","creatorId","addDoc","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setDbNweets","getNweets","docs","map","onSnapshot","snapshot","nweetArr","Navigation","to","AppRouter","isLoggedIn","exact","path","element","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0f6286c.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\ninitializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import React, { useState } from \"react\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport { authService } from \"myBase\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        // create account\n        data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n      } else {\n        // log in\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign in\"}\n        />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Sign in\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import { authService } from \"../myBase\";\nimport React from \"react\";\nimport {\n  signInWithPopup,\n  GoogleAuthProvider,\n  GithubAuthProvider,\n} from \"firebase/auth\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n      // const token = credential.accessToken;\n    } else if (name === \"github\") {\n      provider = new GithubAuthProvider();\n      // const token = credential.accessToken;\n    }\n    await signInWithPopup(authService, provider);\n  };\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button onClick={onSocialClick} name=\"google\">\n          Continue With Google\n        </button>\n        <button onClick={onSocialClick} name=\"github\">\n          Continue With Github\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { updateProfile } from \"@firebase/auth\";\nimport {\n  collection,\n  getDocs,\n  orderBy,\n  query,\n  where,\n} from \"@firebase/firestore\";\nimport { authService, dbService } from \"myBase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nexport default ({ refreshUser, userObj }) => {\n  let navigate = useNavigate();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    navigate(\"/\");\n  };\n  const getMyNweets = async () => {\n    const q = query(\n      collection(dbService, \"nweets\"),\n      where(\"creatorId\", \"==\", userObj.uid),\n      orderBy(\"createdAt\")\n    );\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach((doc) => {\n      console.log(doc.id, \"=>\", doc.data());\n    });\n  };\n  useEffect(() => {\n    // Nweets를 얻는 함수 호출\n    getMyNweets();\n  }, []);\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      // 새로운 이름으로 변경\n      await updateProfile(userObj, { displayName: newDisplayName });\n      refreshUser();\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n        />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\n","import React from \"react\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { dbService, storageService } from \"../myBase\";\nimport { useState } from \"react/cjs/react.development\";\nimport { deleteObject, ref } from \"@firebase/storage\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const NweetTextRef = doc(dbService, \"nweets\", `${nweetObj.id}`);\n  const NweetImgRef = ref(storageService, nweetObj.attachmentUrl);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      // delete nweet\n      await deleteDoc(NweetTextRef);\n      await deleteObject(NweetImgRef);\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await updateDoc(NweetTextRef, {\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              onChange={onChange}\n            />\n            <input type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4> {nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Nweet</button>\n              <button onClick={toggleEditing}>Update Nweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import { addDoc, collection } from \"@firebase/firestore\";\nimport { dbService, storageService } from \"myBase\";\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport React, { useState } from \"react\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const fileRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadString(fileRef, attachment, \"data_url\");\n      console.log(response);\n      attachmentUrl = await getDownloadURL(response.ref);\n    }\n    // console.log(attachmentUrl);\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await addDoc(collection(dbService, \"nweets\"), nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n\n    // try {\n    //   const docRef = await addDoc(collection(dbService, \"nweets\"), {\n    //     text: nweet,\n    //     createdAt: Date.now(),\n    //     creatorId: userObj.uid,\n    //   });\n    //   console.log(\"Document written with ID: \", docRef.id);\n    // } catch (e) {\n    //   console.log(\"Error adding document : \", e);\n    // }\n    // setNweet(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachmentClick = () => setAttachment(null);\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        value={nweet}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"What's on your mind?\"\n        maxLength={120}\n      />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"Nweet\" />\n      {attachment && (\n        <div>\n          <img src={attachment} width=\"50px\" height=\"50px\" />\n          <button onClick={onClearAttachmentClick}>Clear</button>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;\n","import { dbService } from \"myBase\";\nimport {\n  collection,\n  getDocs,\n  onSnapshot,\n  query,\n  orderBy,\n} from \"firebase/firestore\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setDbNweets] = useState([]);\n\n  const getNweets = async () => {\n    const querySnapshot = await getDocs(collection(dbService, \"nweets\"));\n    querySnapshot.docs.map((doc) => {\n      const nweetObj = {\n        ...doc.data(),\n        id: doc.id,\n      };\n      setDbNweets((prev) => [nweetObj, ...prev]);\n    });\n  };\n\n  useEffect(() => {\n    getNweets();\n    const q = query(\n      collection(dbService, \"nweets\"),\n      orderBy(\"createdAt\", \"desc\")\n    );\n    onSnapshot(q, (snapshot) => {\n      const nweetArr = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setDbNweets(nweetArr);\n    });\n  }, []);\n\n  return (\n    <div>\n      <NweetFactory userObj={userObj} />\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React, { useState } from \"react\";\n\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\n\nimport Auth from \"../routes/Auth\";\nimport Profile from \"routes/Profile\";\nimport Home from \"../routes/Home\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Routes>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\" element={<Home userObj={userObj} />} />\n            <Route\n              exact\n              path=\"/profile\"\n              element={<Profile userObj={userObj} refreshUser={refreshUser} />}\n            />\n          </>\n        ) : (\n          <Route path=\"/\" element={<Auth />} />\n        )}\n      </Routes>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"../myBase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        setUserObj(user);\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter </footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}